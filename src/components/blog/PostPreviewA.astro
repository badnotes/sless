---
import type { CollectionEntry } from "astro:content";
import type { HTMLTag, Polymorphic } from "astro/types";
import FormattedDate from "@/components/FormattedDate";
import { Icon } from 'astro-icon/components';

type Props<Tag extends HTMLTag> = Polymorphic<{ as: Tag }> & {
	post: CollectionEntry<"blog" | "project">;
	withDesc?: boolean;
};

const { post, withDesc = false } = Astro.props;
const postDate = post.data.updatedDate ?? post.data.pubDate;
const pinned: boolean = !!post.data.order;
const urlBasePath = post.collection === "project" ? "projects" : post.collection;
---

<li class="flex">
	<div class="date pr-1 mt-0 mr-2 min-w-28">
		<FormattedDate date={postDate}/>
	</div>
	<div>
	<span>
		<a href={`/${urlBasePath}/${post.slug}/`} class="post-item">
			<h4 class="cody-link inline font-bold" >{post.data.title}</h4>
		</a>
		{ pinned &&
			<Icon 
				class="h-5 w-5 inline text-accent rotate-45 -ml-1" 
				name="mdi-pin" 
				aria-hidden="true" 
				focusable="false"
			/>
		}
	</span>
	<span>
	{withDesc && ( <p class="italic mt-2 ml-4">{post.data.description}</p> )}
	</span>
	</div>
</li>
<style>
	.post-item:before {
		content: "#";
		@apply text-accent-2;
	}	
</style>
